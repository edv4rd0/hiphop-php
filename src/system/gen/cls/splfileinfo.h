/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010 Facebook, Inc. (http://www.facebook.com)          |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/
// @generated by HipHop Compiler

#ifndef __GENERATED_cls_splfileinfo_h__
#define __GENERATED_cls_splfileinfo_h__


namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

/* SRC: classes/splfile.php line 3 */
class c_splfileinfo : public ExtObjectData {
  BEGIN_CLASS_MAP(splfileinfo)
  END_CLASS_MAP(splfileinfo)
  DECLARE_CLASS_COMMON(splfileinfo, SplFileInfo, ObjectData)
  DECLARE_INVOKE_EX(splfileinfo, ObjectData)

  // DECLARE_STATIC_PROP_OPS
  public:
  static void os_static_initializer();
  #define OMIT_JUMP_TABLE_CLASS_STATIC_GETINIT_splfileinfo 1
  #define OMIT_JUMP_TABLE_CLASS_STATIC_GET_splfileinfo 1
  #define OMIT_JUMP_TABLE_CLASS_STATIC_LVAL_splfileinfo 1
  #define OMIT_JUMP_TABLE_CLASS_CONSTANT_splfileinfo 1

  // DECLARE_INSTANCE_PROP_OPS
  public:
  virtual bool o_exists(CStrRef s, int64 hash,
                        const char *context = NULL) const;
  bool o_existsPrivate(CStrRef s, int64 hash) const;
  virtual void o_get(Array &props) const;
  virtual Variant o_get(CStrRef s, int64 hash, bool error = true,
                        const char *context = NULL);
  Variant o_getPrivate(CStrRef s, int64 hash, bool error = true);
  virtual Variant o_set(CStrRef s, int64 hash, CVarRef v,
                        bool forInit = false,
                        const char *context = NULL);
  Variant o_setPrivate(CStrRef s, int64 hash, CVarRef v, bool forInit);
  virtual Variant &o_lval(CStrRef s, int64 hash,
                          const char *context = NULL);
  Variant &o_lvalPrivate(CStrRef s, int64 hash);

  // DECLARE_INSTANCE_PUBLIC_PROP_OPS
  public:
  #define OMIT_JUMP_TABLE_CLASS_exists_PUBLIC_splfileinfo 1
  #define OMIT_JUMP_TABLE_CLASS_get_PUBLIC_splfileinfo 1
  #define OMIT_JUMP_TABLE_CLASS_set_PUBLIC_splfileinfo 1
  #define OMIT_JUMP_TABLE_CLASS_lval_PUBLIC_splfileinfo 1

  // DECLARE_COMMON_INVOKE
  #define OMIT_JUMP_TABLE_CLASS_STATIC_INVOKE_splfileinfo 1
  virtual Variant o_invoke(const char *s, CArrRef ps, int64 h,
                           bool f = true);
  virtual Variant o_invoke_few_args(const char *s, int64 h,
                                    int count,
                                    INVOKE_FEW_ARGS_DECL_ARGS);

  public:
  DECLARE_INVOKES_FROM_EVAL
  void init();
  public: void t___construct(Variant v_file_name);
  public: c_splfileinfo *create(Variant v_file_name);
  public: ObjectData *dynCreate(CArrRef params, bool init = true);
  public: void dynConstruct(CArrRef params);
  public: void dynConstructFromEval(Eval::VariableEnvironment &env, const Eval::FunctionCallExpression *call);
  public: String t_getpath();
  public: String t_getfilename();
  public: Object t_getfileinfo(CStrRef v_class_name = "");
  public: String t_getbasename(CStrRef v_suffix = "");
  public: String t_getpathname();
  public: Object t_getpathinfo(CStrRef v_class_name = "");
  public: int64 t_getperms();
  public: int64 t_getinode();
  public: int64 t_getsize();
  public: int64 t_getowner();
  public: int64 t_getgroup();
  public: int64 t_getatime();
  public: int64 t_getmtime();
  public: int64 t_getctime();
  public: String t_gettype();
  public: bool t_iswritable();
  public: bool t_isreadable();
  public: bool t_isexecutable();
  public: bool t_isfile();
  public: bool t_isdir();
  public: bool t_islink();
  public: String t_getlinktarget();
  public: Variant t_getrealpath();
  public: String t___tostring();
  public: Object t_openfile(CStrRef v_mode = "r", bool v_use_include_path = false, CVarRef v_context = null_variant);
  public: Variant t_setfileclass(CStrRef v_class_name = "SplFileObject");
  public: Variant t_setinfoclass(CStrRef v_class_name = "SplFileInfo");
  public: Variant m_rsrc;
};

///////////////////////////////////////////////////////////////////////////////
}

#endif // __GENERATED_cls_splfileinfo_h__
